@model GoogleMapsManager.Domain.GoogleMapsData

<div style="padding:15px">
    <h3>Edit Location</h3>
</div>

@Html.HiddenFor(model => model.SitecoreId)
@Html.HiddenFor(model => model.id)
<style>
    .k-widget select, .k-widget textarea, .k-widget input[type="text"]:not(.k-input), .k-widget input[type="password"], .k-widget input[type="datetime"], .k-widget input[type="datetime-local"], .k-widget input[type="date"], .k-widget input[type="month"], .k-widget input[type="time"], .k-widget input[type="week"], .k-widget input[type="number"], .k-widget input[type="email"], .k-widget input[type="url"], .k-widget input[type="search"], .k-widget input[type="tel"], .k-widget input[type="color"], .k-widget .uneditable-input { box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;}
    .k-window .row, .k-window .row *:not(.k-widget):not(.k-animation-container), .k-widget .row *:before:not(.k-widget) { box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; }
    .k-widget .col-lg-1, .k-widget .col-lg-2, .k-widget .col-lg-3, .k-widget .col-lg-4, .k-widget .col-lg-5, .k-widget .col-lg-6, .k-widget .col-lg-7, .k-widget .col-lg-8, .k-widget .col-lg-9, .k-widget .col-lg-10, .k-widget .col-lg-11, .k-widget .col-lg-12, .k-widget .col-md-1, .k-widget .col-md-2, .k-widget .col-md-3, .k-widget .col-md-4, .k-widget .col-md-5, .k-widget .col-md-6, .k-widget .col-md-7, .k-widget .col-md-8, .k-widget .col-md-9, .k-widget .col-md-10, .k-widget .col-md-11, .k-widget .col-md-12, .k-widget .col-sm-1, .k-widget .col-sm-2, .k-widget .col-sm-3, .k-widget .col-sm-4, .k-widget .col-sm-5, .k-widget .col-sm-6, .k-widget .col-sm-7, .k-widget .col-sm-8, .k-widget .col-sm-9, .k-widget .col-sm-10, .k-widget .col-sm-11, .k-widget .col-sm-12, .k-widget .col-xs-1, .k-widget .col-xs-2, .k-widget .col-xs-3, .k-widget .col-xs-4, .k-widget .col-xs-5, .k-widget .col-xs-6, .k-widget .col-xs-7, .k-widget .col-xs-8, .k-widget .col-xs-9, .k-widget .col-xs-10, .k-widget .col-xs-11, .k-widget .col-xs-12{box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;}
    .k-multiselect { width:400px !important; }
    .k-grid .k-edit { background-image: none !important; }
</style>

    <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(model => model.SitecoreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SitecoreId, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.SitecoreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlantId, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.PlantId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subtitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtitle, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Subtitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Locality, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Locality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", style = "width:400px" }})
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList()
                    .Name("Region")
                    .DataValueField("Region")
                    .DataTextField("Region")
                    .BindTo((System.Collections.IEnumerable)ViewData["regions"])
                    .HtmlAttributes(new { htmlAttributes = new { @class = "form-control", style = "width:400px !important" } })
                )
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacilityTypes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().MultiSelect()
                    .Name("FacilityTypes")
                    .DataTextField("FacilityTypeDescription")
                    .DataValueField("FacilityTypeDescription")
                    .BindTo((System.Collections.IEnumerable)ViewData["facilityTypes"])
                    .ValuePrimitive(true)
                    .HtmlAttributes(new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                )
                @Html.ValidationMessageFor(model => model.FacilityTypes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().MultiSelect()
                    .Name("ProductTypes")
                    .DataTextField("ProductTypeDescription")
                    .DataValueField("ProductTypeDescription")
                    .BindTo((System.Collections.IEnumerable)ViewData["products"])
                    .ValuePrimitive(true)
                    .HtmlAttributes(new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                )
                @Html.ValidationMessageFor(model => model.ProductTypes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantManager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlantManager, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.PlantManager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantManagerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlantManagerEmail, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.PlantManagerEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operations, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Operations, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationsEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationsEmail, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.OperationsEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HR, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.HR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HREmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HREmail, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.HREmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sales, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sales, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.Sales, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesEmail, new { htmlAttributes = new { @class = "form-control", style = "width:400px" } })
                @Html.ValidationMessageFor(model => model.SalesEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantSummary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PlantSummary, new { htmlAttributes = new { @class = "form-control", style = "width:400px;" }, rows=10, cols=40, style="width:auto; min-width:400px;" })
                @Html.ValidationMessageFor(model => model.PlantSummary, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
<script>
    $("#PlantSummary").kendoEditor();
</script>